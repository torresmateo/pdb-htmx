package components

import "mateo/pdb/cmd/models"

var mainTitle string = "PIONEER case studies"

templ head(title string) {
	<head>
		<title>{ title }</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		//<link rel="icon" type="image/svg+xml" href="{{ static('images/favicon.svg') }}">
		<link rel="stylesheet" type="text/css" href="/css/output.css"/>
		<script src="/js/htmx.min.js"></script>
		<script defer src="/js/alpine.min.js"></script>
	</head>
}

templ nav() {
	<nav>
		<a href="/">Home</a> |
		<a href="/about/">About</a> |
	</nav>
}

templ header(title string) {
	<h1>{ title }</h1>
	@nav()
}

templ footer() {
	<div>Footer</div>
}

templ base() {
	<!DOCTYPE html>
	<html lang="en">
		@head(mainTitle)
		<body>
			{ children... }
		</body>
	</html>
}

templ singleColumn() {
	@base() {
		{ children... }
	}
}

templ sidebar(side templ.Component) {
	@base() {
		<div style="background-color: green;">
			{ children... }
		</div>
		<div
			x-data="{ sidebar_open: true }"
			class="relative z-10"
			x-show="sidebar_open"
			aria-labelledby="slide-over-title"
			role="dialog"
			aria-modal="true"
		>
			<!--
            Background backdrop, show/hide based on slide-over state.

            Entering: "ease-in-out duration-500"
            From: "opacity-0"
            To: "opacity-100"
            Leaving: "ease-in-out duration-500"
            From: "opacity-100"
            To: "opacity-0"
            -->
			<div
				class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"
				:class="sidebar_open ? 'opacity-100 block' : 'opacity-0'"
				aria-hidden="true"
			></div>
			<div class="fixed inset-0 overflow-hidden">
				<div class="absolute inset-0 overflow-hidden">
					<div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10">
						<!--
                        Slide-over panel, show/hide based on slide-over state.

                        Entering: "transform transition ease-in-out duration-500 sm:duration-700"
                        From: "translate-x-full"
                        To: "translate-x-0"
                        Leaving: "transform transition ease-in-out duration-500 sm:duration-700"
                        From: "translate-x-0"
                        To: "translate-x-full"
                        -->
						<div
							class="pointer-events-auto w-screen max-w-md"
							:class="sidebar_open ? 'translate-x-0' : 'translate-x-full'"
						>
							<div class="flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl">
								<div class="px-4 sm:px-6">
									<div class="flex items-start justify-between">
										<h2 class="text-base font-semibold leading-6 text-gray-900" id="slide-over-title">Panel title</h2>
										<div class="ml-3 flex h-7 items-center">
											<button
												type="button"
												class="relative rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
												@click="sidebar_open = !sidebar_open"
											>
												<span class="absolute -inset-2.5"></span>
												<span class="sr-only">Close panel</span>
												<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
													<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
												</svg>
											</button>
										</div>
									</div>
								</div>
								<div class="relative mt-6 flex-1 px-4 sm:px-6">
									@side
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ interactionList(interactions map[string]*models.Interaction) {
	<ul>
		for _, i := range interactions {
			<li>
				<a
					href={ i.URL() }
					class="hov"
				>
					{ i.P1 } - { i.P2 } ({ i.AssociatedPdbs() })
				</a>
			</li>
		}
	</ul>
}

templ home(interactions map[string]*models.Interaction) {
	@header("Main PDB list")
	@interactionList(interactions)
	@footer()
}

templ interaction(i *models.Interaction) {
	@header("Main PDB list | Interaction View")
	<h2>Interaction: { i.P1 } - { i.P2 }</h2>
	<ul>
		for _, pdb := range i.Pdbs {
			<li>{ pdb.PdbId } - { pdb.AlignedProtein } - { pdb.Filename }</li>
		}
	</ul>
}

// public components
templ Home(interactions map[string]*models.Interaction) {
	@singleColumn() {
		@home(interactions)
	}
}

templ exampleSide(interactions map[string]*models.Interaction) {
	@interactionList(interactions)
}

templ Interaction(i *models.Interaction, interactions map[string]*models.Interaction) {
	@sidebar(exampleSide(interactions)) {
		@interaction(i)
	}
}
